From 12ce4b8c6f58a1ad8b8f4c031cf7145f4fee6b17 Mon Sep 17 00:00:00 2001
From: Derek Williams <GreenMeanieMC@gmail.com>
Date: Sun, 17 Dec 2017 01:36:29 -0500
Subject: [PATCH] Keep certain items on death API

This adds a getItemsToKeep to PlayerDeathEvent that can be modified for what item a player should keep upon death.

This can be used for never-to-be-dropped items.
---
 .../java/net/minecraft/server/EntityPlayer.java    | 46 +++++++++++++++++++++-
 .../java/net/minecraft/server/PlayerInventory.java |  2 +-
 2 files changed, 46 insertions(+), 2 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 0b71c4b9..f82585ad 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -424,6 +424,45 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
 
     }
 
+    // PaperDragon start
+    private static void processKeep(org.bukkit.event.entity.PlayerDeathEvent event, NonNullList<ItemStack> inv) {
+        List<org.bukkit.inventory.ItemStack> itemsToKeep = event.getItemsToKeep();
+        if (inv == null) {
+            // remainder
+            if (!itemsToKeep.isEmpty()) {
+                final org.bukkit.inventory.ItemStack[] items = itemsToKeep.toArray(
+                        new org.bukkit.inventory.ItemStack[itemsToKeep.size()]
+                );
+                event.getEntity().getInventory().addItem(items);
+            }
+            return;
+        }
+        for (int i = 0; i < inv.size(); ++i) {
+            ItemStack item = inv.get(i);
+            if (itemsToKeep.isEmpty() || item.isEmpty()) {
+                inv.set(i, ItemStack.NULL_ITEM);
+                continue;
+            }
+            final org.bukkit.inventory.ItemStack bukkitStack = item.getBukkitStack();
+
+            boolean keep = false;
+
+            final Iterator<org.bukkit.inventory.ItemStack> iterator = itemsToKeep.iterator();
+            while (iterator.hasNext()) {
+                final org.bukkit.inventory.ItemStack keepStack = iterator.next();
+                if (bukkitStack.equals(keepStack)) {
+                    iterator.remove();
+                    keep = true;
+                    break;
+                }
+            }
+            if (!keep) {
+                inv.set(i, ItemStack.NULL_ITEM);
+            }
+        }
+    }
+    // PaperDragon end
+
     public void die(DamageSource damagesource) {
         boolean flag = this.world.getGameRules().getBoolean("showDeathMessages");
 
@@ -471,8 +510,13 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.releaseShoulderEntities();
         // we clean the player's inventory after the EntityDeathEvent is called so plugins can get the exact state of the inventory.
         if (!event.getKeepInventory()) {
-            this.inventory.clear();
+            // PaperDragon start - replace logic
+            for (NonNullList<ItemStack> inv : this.inventory.getComponents()) {
+                processKeep(event, inv);
+            }
+            // PaperDragon end
         }
+        processKeep(event, null); // PaperDragon
 
         this.closeInventory();
         this.setSpectatorTarget(this); // Remove spectated target
diff --git a/src/main/java/net/minecraft/server/PlayerInventory.java b/src/main/java/net/minecraft/server/PlayerInventory.java
index 84f59b75..2c96fcaf 100644
--- a/src/main/java/net/minecraft/server/PlayerInventory.java
+++ b/src/main/java/net/minecraft/server/PlayerInventory.java
@@ -19,7 +19,7 @@ public class PlayerInventory implements IInventory {
     public final NonNullList<ItemStack> items;
     public final NonNullList<ItemStack> armor;
     public final NonNullList<ItemStack> extraSlots;
-    private final List<NonNullList<ItemStack>> f;
+    private final List<NonNullList<ItemStack>> f; List<NonNullList<ItemStack>> getComponents() { return f; } // PaperDragon - OBF HELPER
     public int itemInHandIndex;
     public EntityHuman player;
     private ItemStack carried;
-- 
2.14.2.windows.3

